{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udcda Documentation Index Welcome! This is the main page of the documentation. Use the links below to navigate: Prompt Engineering","title":"Home"},{"location":"#documentation-index","text":"Welcome! This is the main page of the documentation. Use the links below to navigate: Prompt Engineering","title":"\ud83d\udcda Documentation Index"},{"location":"promptEngineering/","text":"Prompt Engineering Prompt engineering is the process of designing and refining prompts to effectively interact with AI language models. It involves crafting inputs that guide the model to produce desired outputs, improving accuracy, relevance, and usefulness. Prompt as 2 main elements \ud83d\udd27 Prompt Parameters (Summary) Temperature Controls how creative or random the response is. Lower values like 0.0 make answers more exact and predictable (good for code). Higher values like 0.7\u20130.8 make answers more creative and varied. Top-p Controls how many word choices the model considers. Higher values allow more creative and diverse answers. Often used together with temperature. Max length Limits how long the response can be (in tokens, which are words or parts of words). Helps keep responses short and manage cost. \u2705 Key Structure of a Good Prompt Context Give some background so the model understands the situation. Example: Act as an analyst for an OTT platform. You will do sentiment analysis on customer feedback. Instruction Tell the model what task to do. Example: Classify feedback as positive (promoter), negative (demoter), or neutral (neither). Input Data Share the actual question or content you want a response for. Example: Feedback - \"The storyline was repetitive and abysmal.\" Example : Show sample input and expected output to guide the model. > feedback: \"The series was okay\" \u2192 Sentiment: neutral > feedback: \"The acting was awesome\" \u2192 Sentiment: positive/promoter Response Format Tell the model how the output should look. l= Example: Output - negative, json, tablue etc \u2705 Prompt Checklist Give context Provide background information to help the model understand the task. Example: You are helping analyze customer reviews for a streaming platform. Create a role Tell the model what role it should take. This shapes how it responds. Example: Act as a data analyst. Define the goal Clearly state what you want the model to do. Be specific. Example: Classify each review as positive, negative, or neutral. Clarify the audience Say who will use or read the output. This affects the tone and format. Example: The output is for the product team to improve user experience. Detail the output format Explain how you want the response to look (bullet points, JSON, table, etc.). Example: Return the result in this format: Feedback: [text] \u2192 Sentiment: [label] Give examples Provide input-output samples to guide the model. Example: Feedback: \"The acting was great\" \u2192 Sentiment: positive Feedback: \"It was okay\" \u2192 Sentiment: neutral Specify style or tone Mention the desired tone or writing style (formal, casual, concise, etc.). Example: Keep the tone professional and concise. Define the scope Clarify what to include or exclude in the response. Example: Only focus on the emotional tone of the feedback, not grammar or length. Apply restrictions or rules Set clear limits to avoid unwanted results. Example: Do not generate examples. Do not explain the output. (Optional) Add fallback instructions Tell the model what to do if it can't complete the task. Example: If unsure, respond with \u201cCannot determine sentiment.\u201d \u2728 Prompt Patterns Persona Pattern Ask the model to take on a specific role. Format: Act as X, do task Y. Example: Act as a career coach and help me write a resume summary. Audience Persona Pattern Tailor the explanation for a specific audience. Format: Explain X assuming I am Y. Example: Explain blockchain to me like I\u2019m a 10-year-old. Visualization Generator Pattern Ask the model to create content usable by another tool or system. Format: Generate X that can be used with tool Y. Example: Generate a flowchart outline that can be used in draw.io. Recipe Pattern Request a step-by-step process for completing a task. Format: In order to do X, provide steps A, B, C... Example: In order to create a business plan, give me the full sequence of steps from research to presentation. Template Pattern Provide a structure with placeholders, and ask the model to fill in the content. Format: I will provide a template; fill in the placeholders. Example: Here\u2019s an email template with [name], [date], and [action] \u2014 fill it out for a meeting reminder. Few-Shot Prompts Give some examples first, then ask the model to continue or follow the pattern. Example: Translate English to French: Hello \u2192 Bonjour Thank you \u2192 Merci Good night \u2192 Zero-Shot Prompts Ask the model to do a task without giving any examples. Example: Classify this review as positive, negative, or neutral: \"The movie was fantastic and engaging.\" References OpenAI Cookbook: Prompt Engineering Prompt Engineering Guide","title":"Prompt Engineering"},{"location":"promptEngineering/#prompt-engineering","text":"Prompt engineering is the process of designing and refining prompts to effectively interact with AI language models. It involves crafting inputs that guide the model to produce desired outputs, improving accuracy, relevance, and usefulness.","title":"Prompt Engineering"},{"location":"promptEngineering/#prompt-as-2-main-elements","text":"","title":"Prompt as 2 main elements"},{"location":"promptEngineering/#prompt-parameters-summary","text":"Temperature Controls how creative or random the response is. Lower values like 0.0 make answers more exact and predictable (good for code). Higher values like 0.7\u20130.8 make answers more creative and varied. Top-p Controls how many word choices the model considers. Higher values allow more creative and diverse answers. Often used together with temperature. Max length Limits how long the response can be (in tokens, which are words or parts of words). Helps keep responses short and manage cost.","title":"\ud83d\udd27 Prompt Parameters (Summary)"},{"location":"promptEngineering/#key-structure-of-a-good-prompt","text":"Context Give some background so the model understands the situation. Example: Act as an analyst for an OTT platform. You will do sentiment analysis on customer feedback. Instruction Tell the model what task to do. Example: Classify feedback as positive (promoter), negative (demoter), or neutral (neither). Input Data Share the actual question or content you want a response for. Example: Feedback - \"The storyline was repetitive and abysmal.\" Example : Show sample input and expected output to guide the model. > feedback: \"The series was okay\" \u2192 Sentiment: neutral > feedback: \"The acting was awesome\" \u2192 Sentiment: positive/promoter Response Format Tell the model how the output should look. l= Example: Output - negative, json, tablue etc","title":"\u2705 Key Structure of a Good Prompt"},{"location":"promptEngineering/#prompt-checklist","text":"Give context Provide background information to help the model understand the task. Example: You are helping analyze customer reviews for a streaming platform. Create a role Tell the model what role it should take. This shapes how it responds. Example: Act as a data analyst. Define the goal Clearly state what you want the model to do. Be specific. Example: Classify each review as positive, negative, or neutral. Clarify the audience Say who will use or read the output. This affects the tone and format. Example: The output is for the product team to improve user experience. Detail the output format Explain how you want the response to look (bullet points, JSON, table, etc.). Example: Return the result in this format: Feedback: [text] \u2192 Sentiment: [label] Give examples Provide input-output samples to guide the model. Example: Feedback: \"The acting was great\" \u2192 Sentiment: positive Feedback: \"It was okay\" \u2192 Sentiment: neutral Specify style or tone Mention the desired tone or writing style (formal, casual, concise, etc.). Example: Keep the tone professional and concise. Define the scope Clarify what to include or exclude in the response. Example: Only focus on the emotional tone of the feedback, not grammar or length. Apply restrictions or rules Set clear limits to avoid unwanted results. Example: Do not generate examples. Do not explain the output. (Optional) Add fallback instructions Tell the model what to do if it can't complete the task. Example: If unsure, respond with \u201cCannot determine sentiment.\u201d","title":"\u2705 Prompt Checklist"},{"location":"promptEngineering/#prompt-patterns","text":"Persona Pattern Ask the model to take on a specific role. Format: Act as X, do task Y. Example: Act as a career coach and help me write a resume summary. Audience Persona Pattern Tailor the explanation for a specific audience. Format: Explain X assuming I am Y. Example: Explain blockchain to me like I\u2019m a 10-year-old. Visualization Generator Pattern Ask the model to create content usable by another tool or system. Format: Generate X that can be used with tool Y. Example: Generate a flowchart outline that can be used in draw.io. Recipe Pattern Request a step-by-step process for completing a task. Format: In order to do X, provide steps A, B, C... Example: In order to create a business plan, give me the full sequence of steps from research to presentation. Template Pattern Provide a structure with placeholders, and ask the model to fill in the content. Format: I will provide a template; fill in the placeholders. Example: Here\u2019s an email template with [name], [date], and [action] \u2014 fill it out for a meeting reminder. Few-Shot Prompts Give some examples first, then ask the model to continue or follow the pattern. Example: Translate English to French: Hello \u2192 Bonjour Thank you \u2192 Merci Good night \u2192 Zero-Shot Prompts Ask the model to do a task without giving any examples. Example: Classify this review as positive, negative, or neutral: \"The movie was fantastic and engaging.\"","title":"\u2728 Prompt Patterns"},{"location":"promptEngineering/#references","text":"OpenAI Cookbook: Prompt Engineering Prompt Engineering Guide","title":"References"}]}